"""
Django settings for my_to_do project.

Generated by 'django-admin startproject' using Django 1.11.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import socket
import tempfile

from django_auth_ldap.config import LDAPSearch
import ldap

from my_to_do.consts import OAUTH_SCOPES


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '!bvxflyz4h-dk#-i0hnyk@sj8$q*1r6r!+glf%7=b*aub245q7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

BACKEND_VERSION = "20180402-rc2"

# self defined vars
APP_NAME = 'new_my_to_do'
BACKEND_STATIC_RELEASE_DIR = os.path.join(
    BASE_DIR, "config", "nginx", 'static')
FRONTEND_STATIC = os.path.join(
    BASE_DIR, "frontend", 'dist')
APP_STATIC_DIST = os.path.join(BASE_DIR, "my_to_do", "static")
APP_TMPL_DIST = os.path.join(BASE_DIR, "my_to_do", "templates")


AUTHENTICATION_BACKENDS = [
    'django_auth_ldap.backend.LDAPBackend',
]

# LDAP
AUTH_LDAP_SERVER_URI = "ldap://172.21.100.171"
AUTH_LDAP_BIND_DN = "mtkldap\srv_ccollab"
AUTH_LDAP_BIND_PASSWORD = "srv_ccollabmtk"
AUTH_LDAP_USER_SEARCH = LDAPSearch(
    "dc=mtkldap,dc=inc", ldap.SCOPE_SUBTREE, "cn=%(user)s")

AUTH_LDAP_CONNECTION_OPTIONS = {
    ldap.OPT_REFERRALS: 0
}

AUTH_LDAP_USER_ATTR_MAP = {"first_name": "givenName",
                           "last_name": "sn", "email": "mail"}


# CORS middleware setting

CORS_ORIGIN_ALLOW_ALL = True

# Application definition

INSTALLED_APPS = [
    'cr_review_sys',
    'md_analysis',
    "auth_sys",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'oauth2_provider',
    'corsheaders',
    'rest_framework',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'my_to_do.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BACKEND_STATIC_RELEASE_DIR, APP_TMPL_DIST],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'my_to_do.filter.context_injector.version_info'
            ],
        },
    },
]

WSGI_APPLICATION = 'my_to_do.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': '172.21.104.120:1521/cqd1',
        'USER': 'mylooktest',
        'PASSWORD': 'mylooktest',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

# build the frontend projects first by fabric
STATICFILES_DIRS = [
    FRONTEND_STATIC,
    APP_STATIC_DIST
]

STATIC_ROOT = BACKEND_STATIC_RELEASE_DIR

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'upload')

# Rest framework setting

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # temporarily turned off for spec & project pending
        #         'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        #          'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        # temporarily turned off for spec & project pending
        #          'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 1000
}

# OAUTH2_PROVIDER_ACCESS_TOKEN_MODEL = 'oauth2_provider.AccessToken'
OAUTH2_PROVIDER_APPLICATION_MODEL = 'auth_sys.Application'

OAUTH2_PROVIDER = {
    # this is the list of available scopes
    'SCOPES': {
        OAUTH_SCOPES.WCX_SP_ALPS_READ: OAUTH_SCOPES.WCX_SP_ALPS_READ_DESC,
        OAUTH_SCOPES.WCX_FP_MOLY_READ: OAUTH_SCOPES.WCX_FP_MOLY_READ_DESC,
        OAUTH_SCOPES.WCX_SP_ALPS_WRITE: OAUTH_SCOPES.WCX_SP_ALPS_WRITE_DESC,
        OAUTH_SCOPES.WCX_FP_MOLY_WRITE: OAUTH_SCOPES.WCX_FP_MOLY_WRITE_DESC,
        "introspection": "introspection"
    },
    'OAUTH2_VALIDATOR_CLASS': 'auth_sys.validators.CustomOAuth2Validator',
    'REQUEST_APPROVAL_PROMPT': 'auto',
    'DEFAULT_SCOPES': [OAUTH_SCOPES.WCX_SP_ALPS_READ, OAUTH_SCOPES.WCX_FP_MOLY_READ],
    "READ_SCOPE": OAUTH_SCOPES.WCX_SP_ALPS_READ,
    "WRITE_SCOPE": OAUTH_SCOPES.WCX_SP_ALPS_WRITE,
}

# tell django where to put the oauth2 migrations
# MIGRATION_MODULES = {
#    # key: app name, value: a fully qualified package name, not the usual `app_label.something_else`
#   'oauth2_provider': 'auth_sys.migrations.oauth2_provider',
#   'corsheaders': 'auth_sys.migrations.corsheaders'
# }


# 15 hr in sec.
SESSION_COOKIE_AGE = 60 * 60 * 15

# log config
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
    },
    'formatters': {
        'verbose': {
            'format': u'%(asctime)s %(levelname)s %(thread)d %(filename)s:%(lineno)d %(funcName)s %(message)s',
            'datefmt': "%Y-%m-%d %H:%M:%S"
        },
        'simple': {
            'format': u'%(asctime)s %(levelname)s %(message)s',
            'datefmt': "%Y-%m-%d %H:%M:%S"
        },
    },
    'handlers': {
        'applogfile': {
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(tempfile.gettempdir(), 'mytodo_ap_prod_{}.log'.format(socket.gethostname())),
            'maxBytes': 1024 * 1024 * 15,  # 15MB
            'backupCount': 1,
            'formatter': 'verbose'
        },
        'default': {
            'formatter': 'verbose',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'aplogger': {
            'handlers': ['applogfile', 'default'],
            'level': 'DEBUG',
        },
        'django': {
            'handlers': ['applogfile', 'default'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['applogfile', 'default'],
            'level': 'ERROR',
            'propagate': False,
        },
        'django_auth_ldap': {
            'handlers': ['applogfile', 'default'],
            'level': 'DEBUG',
        },
        'oauth2_provider': {
            'handlers': ['applogfile', 'default'],
            'level': 'DEBUG',
        }
    }
}

CRM_CONNECTION_STRING = "mytodo/mytodomtk@172.21.104.228:1521/esvp"
ODR_CONNECTION_STRING = "mytodoreader/mytodoreader_mtk@172.21.104.226:1521/odrq"
SMTP_SERVER = "172.21.101.73"
